{"ast":null,"code":"import { eitherRect, replaceOffset } from '../util';\n/**\r\n * @hidden\r\n */\n\nvar PositionService =\n/** @class */\nfunction () {\n  function PositionService(_dom) {\n    this._dom = _dom;\n  }\n\n  PositionService.prototype.positionElement = function (settings) {\n    var anchor = settings.anchor,\n        currentLocation = settings.currentLocation,\n        element = settings.element,\n        anchorAlign = settings.anchorAlign,\n        elementAlign = settings.elementAlign,\n        collisions = settings.collisions;\n    var dom = this._dom;\n    var viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);\n    var anchorRect = eitherRect(dom.offset(anchor), currentLocation);\n    var initialElementRect = replaceOffset(dom.staticOffset(element), currentLocation);\n    var elementRect = this.elementRect(element, initialElementRect);\n    var result = dom.restrictToView({\n      anchorAlign: anchorAlign,\n      anchorRect: anchorRect,\n      collisions: collisions,\n      elementAlign: elementAlign,\n      elementRect: elementRect,\n      viewPort: viewPort\n    });\n    return {\n      flipped: result.flipped,\n      offset: dom.addOffset(initialElementRect, result.offset)\n    };\n  };\n\n  PositionService.prototype.elementRect = function (element, rect) {\n    return this._dom.removeScroll(rect, this._dom.scrollPosition(element));\n  };\n\n  return PositionService;\n}();\n\nexport { PositionService };","map":{"version":3,"sources":["../../../src/services/positionService.ts"],"names":[],"mappings":"AAOA,SAAS,UAAT,EAAqB,aAArB,QAA0C,SAA1C;AAEA;;;;AAGA,IAAA,eAAA;AAAA;AAAA,YAAA;AACI,WAAA,eAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAqB;;AAElC,EAAA,eAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,QAAvB,EAAwD;AAEhD,QAAA,MAAA,GAAA,QAAA,CAAA,MAAA;AAAA,QACA,eAAA,GAAA,QAAA,CAAA,eADA;AAAA,QAEA,OAAA,GAAA,QAAA,CAAA,OAFA;AAAA,QAGA,WAAA,GAAA,QAAA,CAAA,WAHA;AAAA,QAIA,YAAA,GAAA,QAAA,CAAA,YAJA;AAAA,QAKA,UAAA,GAAA,QAAA,CAAA,UALA;AAQJ,QAAM,GAAG,GAAG,KAAK,IAAjB;AACA,QAAM,QAAQ,GAAG,QAAQ,CAAC,QAAT,IAAqB,GAAG,CAAC,uBAAJ,CAA4B,OAA5B,CAArB,IAA6D,GAAG,CAAC,cAAJ,CAAmB,OAAnB,CAA9E;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAJ,CAAW,MAAX,CAAD,EAAmD,eAAnD,CAA7B;AACA,QAAM,kBAAkB,GAAG,aAAa,CAAC,GAAG,CAAC,YAAJ,CAAiB,OAAjB,CAAD,EAA2C,eAA3C,CAAxC;AACA,QAAM,WAAW,GAAG,KAAK,WAAL,CAAiB,OAAjB,EAA0B,kBAA1B,CAApB;AAEA,QAAM,MAAM,GAAG,GAAG,CAAC,cAAJ,CAAmB;AAC9B,MAAA,WAAW,EAAA,WADmB;AAE9B,MAAA,UAAU,EAAA,UAFoB;AAG9B,MAAA,UAAU,EAAA,UAHoB;AAI9B,MAAA,YAAY,EAAA,YAJkB;AAK9B,MAAA,WAAW,EAAA,WALmB;AAM9B,MAAA,QAAQ,EAAA;AANsB,KAAnB,CAAf;AASA,WAAO;AACH,MAAA,OAAO,EAAE,MAAM,CAAC,OADb;AAEH,MAAA,MAAM,EAAE,GAAG,CAAC,SAAJ,CAAc,kBAAd,EAAkC,MAAM,CAAC,MAAzC;AAFL,KAAP;AAIH,GA7BM;;AA+BC,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,OAApB,EAAkC,IAAlC,EAAmD;AAC/C,WAAO,KAAK,IAAL,CAAU,YAAV,CAAuB,IAAvB,EAA6B,KAAK,IAAL,CAAU,cAAV,CAAyB,OAAzB,CAA7B,CAAP;AACH,GAFO;;AAGZ,SAAA,eAAA;AAAC,CArCD,EAAA","sourceRoot":"","sourcesContent":["import { eitherRect, replaceOffset } from '../util';\r\n/**\r\n * @hidden\r\n */\r\nvar PositionService = /** @class */ (function () {\r\n    function PositionService(_dom) {\r\n        this._dom = _dom;\r\n    }\r\n    PositionService.prototype.positionElement = function (settings) {\r\n        var anchor = settings.anchor, currentLocation = settings.currentLocation, element = settings.element, anchorAlign = settings.anchorAlign, elementAlign = settings.elementAlign, collisions = settings.collisions;\r\n        var dom = this._dom;\r\n        var viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);\r\n        var anchorRect = eitherRect(dom.offset(anchor), currentLocation);\r\n        var initialElementRect = replaceOffset(dom.staticOffset(element), currentLocation);\r\n        var elementRect = this.elementRect(element, initialElementRect);\r\n        var result = dom.restrictToView({\r\n            anchorAlign: anchorAlign,\r\n            anchorRect: anchorRect,\r\n            collisions: collisions,\r\n            elementAlign: elementAlign,\r\n            elementRect: elementRect,\r\n            viewPort: viewPort\r\n        });\r\n        return {\r\n            flipped: result.flipped,\r\n            offset: dom.addOffset(initialElementRect, result.offset)\r\n        };\r\n    };\r\n    PositionService.prototype.elementRect = function (element, rect) {\r\n        return this._dom.removeScroll(rect, this._dom.scrollPosition(element));\r\n    };\r\n    return PositionService;\r\n}());\r\nexport { PositionService };\r\n//# sourceMappingURL=positionService.js.map"]},"metadata":{},"sourceType":"module"}