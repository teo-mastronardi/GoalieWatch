{"ast":null,"code":"import { localeInfo } from '../cldr';\nimport { DECIMAL, DEFAULT_LOCALE, NUMBER_PLACEHOLDER, EMPTY } from '../common/constants';\nimport standardNumberFormat from './standard-number-format';\nimport customNumberFormat from './custom-number-format';\nimport formatOptions from './format-options';\nexport default function formatNumber(number, format, locale) {\n  if (format === void 0) format = NUMBER_PLACEHOLDER;\n  if (locale === void 0) locale = DEFAULT_LOCALE;\n\n  if (number === undefined || number === null) {\n    return EMPTY;\n  }\n\n  if (!isFinite(number)) {\n    return String(number);\n  }\n\n  var info = localeInfo(locale);\n  var options = formatOptions(format);\n  var result;\n\n  if (options) {\n    var style = options.style || DECIMAL;\n    result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);\n  } else {\n    result = customNumberFormat(number, format, info);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/Larsen/Documents/GitHub/GoalieWatch/node_modules/@telerik/kendo-intl/dist/es/numbers/format-number.js"],"names":["localeInfo","DECIMAL","DEFAULT_LOCALE","NUMBER_PLACEHOLDER","EMPTY","standardNumberFormat","customNumberFormat","formatOptions","formatNumber","number","format","locale","undefined","isFinite","String","info","options","result","style","Object","assign","numbers"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,kBAAlC,EAAsDC,KAAtD,QAAmE,qBAAnE;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8C;AACzD,MAAKD,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAGP,kBAAT;AACzB,MAAKQ,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAGT,cAAT;;AAEzB,MAAIO,MAAM,KAAKG,SAAX,IAAwBH,MAAM,KAAK,IAAvC,EAA6C;AACzC,WAAOL,KAAP;AACH;;AAED,MAAI,CAACS,QAAQ,CAACJ,MAAD,CAAb,EAAuB;AACnB,WAAOK,MAAM,CAACL,MAAD,CAAb;AACH;;AAED,MAAIM,IAAI,GAAGf,UAAU,CAACW,MAAD,CAArB;AACA,MAAIK,OAAO,GAAGT,aAAa,CAACG,MAAD,CAA3B;AAEA,MAAIO,MAAJ;;AACA,MAAID,OAAJ,EAAa;AACT,QAAIE,KAAK,GAAGF,OAAO,CAACE,KAAR,IAAiBjB,OAA7B;AACAgB,IAAAA,MAAM,GAAGZ,oBAAoB,CAACI,MAAD,EAASU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,IAAI,CAACM,OAAL,CAAaH,KAAb,CAAlB,EAAuCF,OAAvC,CAAT,EAA0DD,IAA1D,CAA7B;AACH,GAHD,MAGO;AACHE,IAAAA,MAAM,GAAGX,kBAAkB,CAACG,MAAD,EAASC,MAAT,EAAiBK,IAAjB,CAA3B;AACH;;AAED,SAAOE,MAAP;AACH","sourcesContent":["import { localeInfo } from '../cldr';\r\nimport { DECIMAL, DEFAULT_LOCALE, NUMBER_PLACEHOLDER, EMPTY } from '../common/constants';\r\nimport standardNumberFormat from './standard-number-format';\r\nimport customNumberFormat from './custom-number-format';\r\nimport formatOptions from './format-options';\r\n\r\nexport default function formatNumber(number, format, locale) {\r\n    if ( format === void 0 ) format = NUMBER_PLACEHOLDER;\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n\r\n    if (number === undefined || number === null) {\r\n        return EMPTY;\r\n    }\r\n\r\n    if (!isFinite(number)) {\r\n        return String(number);\r\n    }\r\n\r\n    var info = localeInfo(locale);\r\n    var options = formatOptions(format);\r\n\r\n    var result;\r\n    if (options) {\r\n        var style = options.style || DECIMAL;\r\n        result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);\r\n    } else {\r\n        result = customNumberFormat(number, format, info);\r\n    }\r\n\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}