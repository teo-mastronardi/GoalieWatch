{"ast":null,"code":"import { eitherRect, removeStackingOffset } from '../util';\n/**\r\n * @hidden\r\n */\n\nvar AlignService =\n/** @class */\nfunction () {\n  function AlignService(_dom) {\n    this._dom = _dom;\n  }\n\n  AlignService.prototype.alignElement = function (settings) {\n    var anchor = settings.anchor,\n        element = settings.element,\n        anchorAlign = settings.anchorAlign,\n        elementAlign = settings.elementAlign,\n        offset = settings.offset;\n    var fixedMode = !this._dom.hasOffsetParent(element);\n    var anchorRect = fixedMode ? this.absoluteRect(anchor, element, offset) : this.relativeRect(anchor, element, offset);\n    return this._dom.align({\n      anchorAlign: anchorAlign,\n      anchorRect: anchorRect,\n      elementAlign: elementAlign,\n      elementRect: this._dom.offset(element)\n    });\n  };\n\n  AlignService.prototype.absoluteRect = function (anchor, element, offset) {\n    var dom = this._dom;\n    var rect = eitherRect(dom.offset(anchor), offset);\n    var stackingOffset = dom.stackingElementOffset(element);\n    var removedOffset = removeStackingOffset(rect, stackingOffset);\n    var stackingScroll = dom.stackingElementScroll(element);\n    var withScroll = dom.addScroll(removedOffset, stackingScroll);\n    var scrollPosition = this.elementScrollPosition(anchor, element);\n    var result = dom.removeScroll(withScroll, scrollPosition);\n    result.left += window.scrollX || window.pageXOffset;\n    result.top += window.scrollY || window.pageYOffset;\n    return result;\n  };\n\n  AlignService.prototype.elementScrollPosition = function (anchor, element) {\n    return anchor ? {\n      x: 0,\n      y: 0\n    } : this._dom.scrollPosition(element);\n  };\n\n  AlignService.prototype.relativeRect = function (anchor, element, offset) {\n    return eitherRect(this._dom.position(anchor, element), offset);\n  };\n\n  return AlignService;\n}();\n\nexport { AlignService };","map":{"version":3,"sources":["../../../src/services/alignService.ts"],"names":[],"mappings":"AAMA,SAAS,UAAT,EAAqB,oBAArB,QAAiD,SAAjD;AAEA;;;;AAGA,IAAA,YAAA;AAAA;AAAA,YAAA;AACI,WAAA,YAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAqB;;AAElC,EAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,QAApB,EAAkD;AACtC,QAAA,MAAA,GAAA,QAAA,CAAA,MAAA;AAAA,QAAQ,OAAA,GAAA,QAAA,CAAA,OAAR;AAAA,QAAiB,WAAA,GAAA,QAAA,CAAA,WAAjB;AAAA,QAA8B,YAAA,GAAA,QAAA,CAAA,YAA9B;AAAA,QAA4C,MAAA,GAAA,QAAA,CAAA,MAA5C;AAER,QAAM,SAAS,GAAG,CAAC,KAAK,IAAL,CAAU,eAAV,CAA0B,OAA1B,CAAnB;AAEA,QAAM,UAAU,GAAG,SAAS,GACxB,KAAK,YAAL,CAAkB,MAAlB,EAA0B,OAA1B,EAAmC,MAAnC,CADwB,GAExB,KAAK,YAAL,CAAkB,MAAlB,EAA0B,OAA1B,EAAmC,MAAnC,CAFJ;AAIA,WAAO,KAAK,IAAL,CAAU,KAAV,CAAgB;AACnB,MAAA,WAAW,EAAE,WADM;AAEnB,MAAA,UAAU,EAAE,UAFO;AAGnB,MAAA,YAAY,EAAE,YAHK;AAInB,MAAA,WAAW,EAAE,KAAK,IAAL,CAAU,MAAV,CAAiB,OAAjB;AAJM,KAAhB,CAAP;AAMH,GAfM;;AAiBC,EAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,MAArB,EAAkC,OAAlC,EAAgD,MAAhD,EAA8D;AAC1D,QAAM,GAAG,GAAG,KAAK,IAAjB;AACA,QAAM,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,MAAJ,CAAW,MAAX,CAAD,EAAqB,MAArB,CAAvB;AACA,QAAM,cAAc,GAAG,GAAG,CAAC,qBAAJ,CAA0B,OAA1B,CAAvB;AACA,QAAM,aAAa,GAAG,oBAAoB,CAAC,IAAD,EAAO,cAAP,CAA1C;AACA,QAAM,cAAc,GAAG,GAAG,CAAC,qBAAJ,CAA0B,OAA1B,CAAvB;AACA,QAAM,UAAU,GAAG,GAAG,CAAC,SAAJ,CAAc,aAAd,EAA6B,cAA7B,CAAnB;AACA,QAAM,cAAc,GAAG,KAAK,qBAAL,CAA2B,MAA3B,EAAmC,OAAnC,CAAvB;AACA,QAAM,MAAM,GAAG,GAAG,CAAC,YAAJ,CAAiB,UAAjB,EAA6B,cAA7B,CAAf;AAEA,IAAA,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,OAAP,IAAkB,MAAM,CAAC,WAAxC;AACA,IAAA,MAAM,CAAC,GAAP,IAAc,MAAM,CAAC,OAAP,IAAkB,MAAM,CAAC,WAAvC;AAEA,WAAO,MAAP;AACH,GAdO;;AAgBA,EAAA,YAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,UAA8B,MAA9B,EAA2C,OAA3C,EAAuD;AACnD,WAAO,MAAM,GAAG;AAAE,MAAA,CAAC,EAAE,CAAL;AAAQ,MAAA,CAAC,EAAE;AAAX,KAAH,GAAoB,KAAK,IAAL,CAAU,cAAV,CAAyB,OAAzB,CAAjC;AACH,GAFO;;AAIA,EAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,MAArB,EAAkC,OAAlC,EAAgD,MAAhD,EAA8D;AAC1D,WAAO,UAAU,CAAC,KAAK,IAAL,CAAU,QAAV,CAAmB,MAAnB,EAA2B,OAA3B,CAAD,EAAqD,MAArD,CAAjB;AACH,GAFO;;AAGZ,SAAA,YAAA;AAAC,CA3CD,EAAA","sourceRoot":"","sourcesContent":["import { eitherRect, removeStackingOffset } from '../util';\r\n/**\r\n * @hidden\r\n */\r\nvar AlignService = /** @class */ (function () {\r\n    function AlignService(_dom) {\r\n        this._dom = _dom;\r\n    }\r\n    AlignService.prototype.alignElement = function (settings) {\r\n        var anchor = settings.anchor, element = settings.element, anchorAlign = settings.anchorAlign, elementAlign = settings.elementAlign, offset = settings.offset;\r\n        var fixedMode = !this._dom.hasOffsetParent(element);\r\n        var anchorRect = fixedMode ?\r\n            this.absoluteRect(anchor, element, offset) :\r\n            this.relativeRect(anchor, element, offset);\r\n        return this._dom.align({\r\n            anchorAlign: anchorAlign,\r\n            anchorRect: anchorRect,\r\n            elementAlign: elementAlign,\r\n            elementRect: this._dom.offset(element)\r\n        });\r\n    };\r\n    AlignService.prototype.absoluteRect = function (anchor, element, offset) {\r\n        var dom = this._dom;\r\n        var rect = eitherRect(dom.offset(anchor), offset);\r\n        var stackingOffset = dom.stackingElementOffset(element);\r\n        var removedOffset = removeStackingOffset(rect, stackingOffset);\r\n        var stackingScroll = dom.stackingElementScroll(element);\r\n        var withScroll = dom.addScroll(removedOffset, stackingScroll);\r\n        var scrollPosition = this.elementScrollPosition(anchor, element);\r\n        var result = dom.removeScroll(withScroll, scrollPosition);\r\n        result.left += window.scrollX || window.pageXOffset;\r\n        result.top += window.scrollY || window.pageYOffset;\r\n        return result;\r\n    };\r\n    AlignService.prototype.elementScrollPosition = function (anchor, element) {\r\n        return anchor ? { x: 0, y: 0 } : this._dom.scrollPosition(element);\r\n    };\r\n    AlignService.prototype.relativeRect = function (anchor, element, offset) {\r\n        return eitherRect(this._dom.position(anchor, element), offset);\r\n    };\r\n    return AlignService;\r\n}());\r\nexport { AlignService };\r\n//# sourceMappingURL=alignService.js.map"]},"metadata":{},"sourceType":"module"}